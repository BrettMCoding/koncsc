{"version":3,"sources":["site_layout/user_management/services/AuthenticationService.js","site_layout/user_management/components/LoginComponent.js","site_layout/user_management/components/LogoutComponent.js","site_layout/user_management/components/NavCharacterList.js","site_layout/user_management/components/ConfirmationModal.js","site_layout/header/Navigation.js","site_layout/header/Header.js","site_layout/character_info/CharacterInfoInput.js","site_layout/character_info/CharacterInfo.js","site_layout/resources/Resource.js","site_layout/resources/Resources.js","site_layout/skill_trees/Skill.js","site_layout/skill_trees/SkillTree.js","site_layout/user_management/components/UserLoginLogoutComponent.js","site_layout/user_management/components/RegisterNewUserComponent.js","site_layout/user_management/components/NewPasswordComponent.js","site_layout/user_management/components/ForgotPasswordComponent.js","App.js","index.js","react-alert-template-basic.js"],"names":["username","password","axios","get","process","headers","authorization","this","createBasicAuthToken","window","btoa","sessionStorage","setItem","console","log","getItem","setupAxiosInterceptors","removeItem","user","token","interceptors","request","use","config","isUserLoggedIn","LoginComponent","props","useState","email","updateEmail","updatePassword","hasLoginFailed","setLoginFailed","showSuccessMessage","setSuccessMessage","alert","useAlert","className","type","name","value","onChange","event","target","onClick","AuthenticationService","executeBasicAuthenticationService","then","registerSuccessfulLogin","show","timeout","toggleModal","getUserLoggedInProp","loadCharacterList","catch","href","APP_URL","LogoutComponent","logout","NavCharacterList","characterList","map","character","id","setCurrentConfirmationModal","handleCharacter","message","characterName","level","race","ConfirmationModal","Modal","isOpen","confirmationModalIsOpen","toggle","toggleConfirmationModalIsOpen","ModalBody","ModalFooter","Button","color","Navigation","navbarIsOpen","setNavbarIsOpen","loginModalIsOpen","setLoginModalIsOpen","setConfirmationModalIsOpen","toggleLoginModal","handleMethod","setHandleMethod","setMessage","setId","setUserLoggedIn","boolean","hideWhenNotLoggedInWrap","content","items","from","opacity","enter","leave","transitionProps","div","style","Navbar","light","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","lockChanges","locked","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","saveCharacter","loadCharacter","deleteCharacter","staate","ModalHeader","Header","Container","React","Component","CharacterInfoInput","displayName","placeholder","maxLength","infoValue","disabled","e","characterInfoChange","infoName","CharacterInfo","Row","Col","country","player","calculateSkillPointsRemaining","savedXp","Resource","removeResource","addResource","resourceName","resource","max","skillCss","cost","fillBarAnim","useSpring","width","ResourceBar","Filler","undefined","isLoaded","Resources","MAGIC_POINT_COST","resources","magicPoints","PRODUCTION_POINT_COST","productionPoints","CRAFT_POINT_COST","craftPoints","Skill","playerHasSkill","playerSkills","compareIds","some","skill","checkedStyle","checked","playerCheckedASkillBox","tier","SkillTree","setIsOpen","skills","key","icon","faChevronUp","faChevronDown","treeName","UserLoginLogoutComponent","RegisterNewUserComponent","hasRegisterFailed","setRegisterFailed","errorMessage","setErrorMessage","useEffect","document","title","persist","post","API_URL","res","err","response","data","requestRegisterNewUser","NewPasswordComponent","password2","updatePassword2","match","params","requestNewPassword","ForgotPasswordComponent","App","state","combat","general","production","roleplaying","aegis","battle","nature","necromancy","compulsion","restoration","enchantment","sortSkillsByTree","tree","setState","prevState","saveLocalCharacter","values","localStorage","JSON","stringify","loadLocalCharacter","localStorageCharacter","parse","method","url","updatedInfo","calculateBaseSkillPoints","newSkillPointsRemaining","calculateSpentSkillPoints","spent","playerResources","checkRequirements","requiredSkill","requires","pSkills","pSkill","includes","checkedSkill","addSkill","skillIsRequired","removeSkill","requirementSkillString","pSkill2","filter","arrSkill","exact","path","ockChanges","to","component","withAlert","options","position","positions","TOP_CENTER","offset","transition","transitions","FADE","render","template","AlertTemplate","getElementById","ex","require","BaseIcon","_ref","_ref$pushRight","pushRight","children","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","marginRight","minWidth","InfoIcon","cx","cy","r","x1","y1","x2","y2","SuccessIcon","d","points","ErrorIcon","CloseIcon","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","alertStyle","backgroundColor","padding","borderRadius","display","justifyContent","alignItems","boxShadow","fontFamily","boxSizing","buttonStyle","marginLeft","border","cursor","module","exports","close","flex","whiteSpace","textAlign"],"mappings":"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","file":"static/js/main.f936b41b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_DOMAIN\r\n\r\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\r\n\r\nclass AuthenticationService {\r\n\r\n    executeBasicAuthenticationService(username, password) {\r\n        \r\n        return axios.get(`${API_URL}/auth`,\r\n            { headers: { authorization: this.createBasicAuthToken(username, password) } })\r\n    }\r\n\r\n    createBasicAuthToken(username, password) {\r\n        let basicAuth = 'Basic ' + window.btoa(username + \":\" + password)\r\n\r\n        return basicAuth\r\n    }\r\n\r\n    registerSuccessfulLogin(username, password) {\r\n\r\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\r\n        console.log(\"you are now logged in as: \")\r\n        console.log(sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME))\r\n        console.log(\"\\n\\n\\n\\n\\n\")\r\n        sessionStorage.setItem(\"USER_TOKEN\", this.createBasicAuthToken(username, password))\r\n        this.setupAxiosInterceptors(sessionStorage.getItem(\"USER_TOKEN\"))\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n        if (user === null) return false\r\n        return true\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n        if (user === null) return ''\r\n        return user\r\n    }\r\n\r\n    setupAxiosInterceptors(token) {\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = token\r\n                }\r\n                return config\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService()\r\n","import React, { useState } from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\nimport { useAlert } from 'react-alert';\r\n\r\nfunction LoginComponent(props) {\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [email, updateEmail] = useState('');\r\n    const [password, updatePassword] = useState('');\r\n    const [hasLoginFailed, setLoginFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const alert = useAlert();\r\n\r\n    const loginClicked = () => {\r\n        ///console.log(\"\\n\\n\\n\\n\\n\")\r\n        //console.log(\"attempting to login\")\r\n        //console.log(\"\\n\\n\\n\\n\\n\")\r\n\r\n        AuthenticationService\r\n            .executeBasicAuthenticationService(email, password)\r\n            .then(() => {\r\n                AuthenticationService.registerSuccessfulLogin(email, password)\r\n                alert.show(\"Login Successful\", {type:'success', timeout: 5000})\r\n                // this.props.history.push(`/courses`)\r\n\r\n                props.toggleModal();\r\n                props.getUserLoggedInProp(AuthenticationService.isUserLoggedIn());\r\n                props.loadCharacterList();\r\n\r\n            }).catch(() => {\r\n                setSuccessMessage(false);\r\n                setLoginFailed(true);\r\n                //console.log(\"Login Failed. Likely invalid credentials (401)\")\r\n                //console.log(\"\\n\\n\\n\\n\\n\")\r\n            })\r\n    }\r\n\r\n    const eventUpdateEmail = (event) => updateEmail(event.target.value);\r\n    const eventUpdatePassword = (event) => updatePassword(event.target.value);\r\n\r\n    return (\r\n        <div>\r\n        {!props.isUserLoggedIn &&\r\n                <div className=\"container form-group d-flex flex-column\">\r\n                    <h1 className=\"text-center\">Login</h1>\r\n\r\n                    {hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">Login Successful</div>}\r\n\r\n                    Email: <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={eventUpdateEmail}/>\r\n\r\n                    Password: <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={eventUpdatePassword}/>\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" onClick={loginClicked}>Login</button>\r\n                    <div>\r\n                        <a href={APP_URL + '/register'} className=\"btn btn-outline-secondary text-center\">Create account</a>\r\n                        <a href={APP_URL + '/forgot'} className=\"btn btn-outline-secondary text-center\">Forgot your password?</a>\r\n                        \r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginComponent","import React from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService'\r\nimport { useAlert } from 'react-alert';\r\n\r\nexport default function LogoutComponent(props) {\r\n    const alert = useAlert();\r\n\r\n    const logout = () => {\r\n        AuthenticationService.logout()\r\n        alert.show('Logout Successful', {type:'success', timeout:5000})\r\n        props.getUserLoggedInProp(AuthenticationService.isUserLoggedIn())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                <button className=\"btn btn-danger\" onClick={logout}>Logout</button> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NavCharacterList(props) {\r\n    // return a div map of all users characters by id\r\n    // on click, handleMethod, message, and characterId is passed to our confirmationModal\r\n    // to have the user confirm before losing/overwriting data\r\n    \r\n    return props.characterList.map((character) => {\r\n            \r\n            return <div \r\n\r\n            id={character.id} \r\n\r\n            onClick={() => \r\n                {props.setCurrentConfirmationModal(\r\n                    // pass handle method (save/load/delete)\r\n                    props.handleCharacter, \r\n                    // pass related save/load/delete message with character name\r\n                    (props.message + character.characterName + \")\"), \r\n                    // pass character id if user confirms choice\r\n                    character.id)}}>\r\n\r\n                    {/* displayed as \"Charactername. level race */}\r\n                    {character.characterName}.&nbsp;Level&nbsp;{character.level}&nbsp;{character.race}\r\n                \r\n            </div>\r\n        });\r\n}\r\n","import React from 'react'\r\nimport { Modal, ModalBody, ModalFooter, Button } from 'reactstrap'\r\n\r\nexport default function ConfirmationModal(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal isOpen={props.confirmationModalIsOpen} toggle={props.toggleConfirmationModalIsOpen}>\r\n                <ModalBody>\r\n                    {props.message}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button className=\" m-auto w-50 \" color=\"secondary\" onClick={props.toggleConfirmationModalIsOpen}>Cancel</Button>\r\n                    <Button className=\" m-auto w-50 \" color=\"success\" onClick={() => {props.handleCharacter(props.id, props.alert);props.toggleConfirmationModalIsOpen()}}>Confirm</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport LoginComponent from '../user_management/components/LoginComponent';\r\nimport LogoutComponent from '../user_management/components/LogoutComponent';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n    // NavbarText\r\n} from 'reactstrap';\r\nimport { animated } from 'react-spring';\r\nimport { Transition } from 'react-spring/renderprops';\r\nimport AuthenticationService from '../user_management/services/AuthenticationService';\r\nimport NavCharacterList from '../user_management/components/NavCharacterList';\r\nimport ConfirmationModal from '../user_management/components/ConfirmationModal';\r\nimport { useAlert } from 'react-alert';\r\n\r\n// Navigation is the house for our character / user management\r\n\r\nfunction Navigation(props) {\r\n  const [navbarIsOpen, setNavbarIsOpen] = useState(false);\r\n  const [loginModalIsOpen, setLoginModalIsOpen] = useState(false);\r\n  const [confirmationModalIsOpen, setConfirmationModalIsOpen] = useState(false);\r\n\r\n  // alert popup system\r\n  const alert = useAlert();\r\n\r\n  // log state test button\r\n  const logs = () => {console.log(props.staate)}\r\n\r\n  // navbar collapse/expand\r\n  const toggleNavbar = () => setNavbarIsOpen(!navbarIsOpen);\r\n\r\n  // login modal\r\n  const toggleLoginModal = () => setLoginModalIsOpen(isUserLoggedIn ? false : !loginModalIsOpen);\r\n\r\n  // confirmation modal\r\n  // the confirmationModal is setup to handle Save/Load/Delete based on the user \r\n  // clicking a character in one of our NavCharacterLists\r\n  const toggleConfirmationModalIsOpen = () => {\r\n    setConfirmationModalIsOpen(!confirmationModalIsOpen)};\r\n    \r\n    // handleMethod is Save/Load/Delete character, set by whichever list option is clicked\r\n    const [handleMethod, setHandleMethod] = useState(\"\");\r\n    // message is added to confirmationModal as \"are you sure you want to save/load/delete?\" similarly to the handleMethod\r\n    const [message, setMessage] = useState(\"\");\r\n    // id is added to confirmationModal, \r\n    const [id, setId] = useState(null);\r\n\r\n  // when the user clicks to save/load/delete a character,\r\n  // a confirmationModal is setup with the following args\r\n  // and then displayed to make sure the user meant to take that action \r\n  const setCurrentConfirmationModal = (handleMethod, message, id) => {\r\n    setHandleMethod(() => handleMethod);\r\n    setMessage(message);\r\n    setId(id);\r\n    toggleConfirmationModalIsOpen();\r\n  }\r\n\r\n  // local state isUserLoggedIn is a little clunky, but updating local State makes rendering changes\r\n  // to the buttons and lists easier\r\n  const [isUserLoggedIn, setUserLoggedIn] = useState(AuthenticationService.isUserLoggedIn());\r\n  const getUserLoggedInProp = (boolean) => {\r\n    setUserLoggedIn(boolean);\r\n  }\r\n\r\n  // using react-spring render-props API to make an animation transition\r\n  // this will hide the character list features when user is not logged in\r\n  const hideWhenNotLoggedInWrap = (content) => {\r\n      // Transition object controls opacity animation.\r\n      // Used to show/hide content on login/logout\r\n    return <div><Transition\r\n        items={isUserLoggedIn}\r\n        from={{ opacity: 0 }}\r\n        enter={{ opacity: 1 }}\r\n        leave={{ opacity: 0 }}>\r\n        {isUserLoggedIn => isUserLoggedIn && ((transitionProps) => <animated.div style={transitionProps}> \r\n            \r\n            {/* below content arg is whatever element we want to show when user logs in */}\r\n            {content}\r\n\r\n    </animated.div>)}</Transition></div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Navbar className=\"navbar navbar-dark\" light expand=\"md\">\r\n        <NavbarToggler onClick={toggleNavbar} />\r\n\r\n        <Collapse isOpen={navbarIsOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n\r\n            <NavItem >\r\n              <NavLink href=\"http://kingdomsofnovitas.net/\">kingdomsofnovitas.net</NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n              <NavLink href=\"https://www.facebook.com/groups/KingdomsOfNovitas/\">Facebook</NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n                <NavLink>\r\n                     <button className=\"navButton\" onClick={props.lockChanges} >{props.locked ? \"Unl\" : \"L\"}ock Editing</button>\r\n                </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n                { isUserLoggedIn && <LogoutComponent getUserLoggedInProp={getUserLoggedInProp} /> }\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n                { !isUserLoggedIn &&<Button color=\"success\" onClick={toggleLoginModal}>Login</Button>}\r\n            </NavItem>\r\n\r\n            {hideWhenNotLoggedInWrap(\r\n                <NavItem>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                    Save Character\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <NavCharacterList characterList={props.characterList} handleCharacter={props.saveCharacter} setCurrentConfirmationModal={setCurrentConfirmationModal} message={\"Are you sure you want to save this character? (Character in slot: \"}/>\r\n                    <div onClick={()=>{setCurrentConfirmationModal(props.saveCharacter, \"Are you sure you want to save a new character?\")}}>New Character</div>\r\n                </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </NavItem>\r\n            )}\r\n            {hideWhenNotLoggedInWrap(\r\n            <NavItem>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                    Load Character\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <NavCharacterList characterList={props.characterList} handleCharacter={props.loadCharacter} setCurrentConfirmationModal={setCurrentConfirmationModal} message={\"Are you sure you want to load this character? (Character: \"}/>\r\n                </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </NavItem>\r\n            )}\r\n            {hideWhenNotLoggedInWrap(\r\n            <NavItem>\r\n                    <UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                        Delete Character\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                        <NavCharacterList characterList={props.characterList} handleCharacter={props.deleteCharacter} setCurrentConfirmationModal={setCurrentConfirmationModal} message={\"Are you sure you want to load this character? (Character: \"}/>\r\n                    </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n            </NavItem>\r\n            )}\r\n          <NavItem>\r\n                <NavLink>\r\n                     <button className=\"navButton\" onClick={logs} > log state</button>\r\n                </NavLink>\r\n                <NavLink>\r\n                     <button className=\"navButton\" onClick={() => {debugger}} > debugger</button>\r\n                </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n                \r\n                {/* // login modal */}\r\n                <Modal isOpen={loginModalIsOpen} toggle={toggleLoginModal}>\r\n                    <ModalHeader toggle={toggleLoginModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <LoginComponent isUserLoggedIn={isUserLoggedIn} getUserLoggedInProp={getUserLoggedInProp} toggleModal={toggleLoginModal} loadCharacterList={props.loadCharacterList}/>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                            <Button className=\" m-auto w-50 \" color=\"secondary\" onClick={toggleLoginModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                {/* confirm save/load/delete modal */}\r\n                <ConfirmationModal confirmationModalIsOpen={confirmationModalIsOpen}\r\n                toggleConfirmationModalIsOpen={toggleConfirmationModalIsOpen}\r\n                handleCharacter={handleMethod} message={message} id={id} alert={alert} />\r\n               \r\n        </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport {Container} from 'reactstrap';\r\n\r\n// Header contains our title and the Navigation bar\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <div className=\"header-title\">\r\n                        <h1>KINGDOMS OF NOVITAS</h1>\r\n                        <h2>Online Character Sheet | Skill Calculator</h2>\r\n                    </div>\r\n                    <Navigation \r\n                        lockChanges={this.props.lockChanges} \r\n                        locked={this.props.locked} \r\n                        saveCharacter={this.props.saveCharacter} \r\n                        loadCharacter={this.props.loadCharacter} \r\n                        deleteCharacter={this.props.deleteCharacter} \r\n                        characterList={this.props.characterList} \r\n                        loadCharacterList={this.props.loadCharacterList}\r\n                        // passed to button for testing\r\n                        staate={this.props.staate}/>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Nav.propTypes = {\r\n//     lockChanges: PropTypes.func.isRequired\r\n// }\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction CharacterInfoInput(props) {\r\n\r\n    return (\r\n        <div>{props.displayName}:&nbsp;\r\n        <input type=\"text\" \r\n            placeholder={props.placeholder} \r\n            maxLength={props.maxLength} \r\n            value={props.infoValue} \r\n            disabled={props.lockChanges} \r\n            onChange = {e => {\r\n                props.characterInfoChange(props.infoName, e.target.value)}}/>\r\n        </div>\r\n);\r\n\r\n}\r\n\r\nexport default CharacterInfoInput;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, } from 'reactstrap';\r\nimport CharacterInfoInput from './CharacterInfoInput';\r\n\r\nexport class CharacterInfo extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"characterinfo-box\">\r\n                                <div className=\"characterinfo-content\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                                className=\"inputbox\"\r\n                                                displayName=\"Character Name\"\r\n                                                infoName=\"characterName\" \r\n                                                infoValue={this.props.characterName}\r\n                                                maxLength=\"33\"\r\n                                                placeholder=\"Enter a Character Name\"\r\n                                                characterInfoChange={this.props.characterInfoChange}\r\n                                                lockChanges={this.props.lockChanges}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                                className=\"inputbox\"\r\n                                                displayName=\"Race\"\r\n                                                infoName=\"race\" \r\n                                                infoValue={this.props.race}\r\n                                                maxLength=\"33\"\r\n                                                placeholder=\"Enter a Race\"\r\n                                                characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                            className=\"inputbox\"\r\n                                            displayName=\"Country\"\r\n                                            infoName=\"country\" \r\n                                            infoValue={this.props.country}\r\n                                            maxLength=\"33\"\r\n                                            placeholder=\"Enter a Country\"\r\n                                            characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                            className=\"inputbox\"\r\n                                            displayName=\"Player\"\r\n                                            infoName=\"player\" \r\n                                            infoValue={this.props.player}\r\n                                            maxLength=\"33\"\r\n                                            placeholder=\"Enter a player name\"\r\n                                            characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                        \r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                            className=\"inputbox\"\r\n                                            displayName=\"Level\"\r\n                                            infoName=\"level\" \r\n                                            infoValue={this.props.level}\r\n                                            maxLength=\"3\"\r\n                                            placeholder=\"0\"\r\n                                            characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"skillpointsremaining\">Skill Points Remaining:{this.props.calculateSkillPointsRemaining()}\r\n                                            </div>\r\n                                        </Col>\r\n                                        \r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                                className=\"inputbox\"\r\n                                                displayName=\"Saved XP\"\r\n                                                infoName=\"savedXp\" \r\n                                                infoValue={this.props.savedXp}\r\n                                                maxLength=\"33\"\r\n                                                placeholder=\"0\"\r\n                                                characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterInfo","import React from 'react';\r\nimport {Row} from 'reactstrap';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nexport default function Resource(props) {\r\n    // simplify prop drilling\r\n    const { removeResource, addResource, lockChanges } = props.props;\r\n    const { resourceName, resource, max, skillCss, cost, displayName } = props;\r\n    \r\n    // Resource bar step\r\n    const step = () => {\r\n        if (max === 20) {\r\n            return 5;\r\n        }\r\n        return 10;\r\n    }\r\n\r\n    // calculated width % string, send to Filler\r\n    const fillBarAnim = useSpring({ width: resource ? resource * step() + '%' : 0 + '%' })\r\n\r\n    // Resource ProgressBar\r\n    const ResourceBar = () => {\r\n        return (\r\n            <div className=\"progress-bar\">\r\n                <div className=\"bar-text\">{displayName}: {resource} / {max}</div>\r\n                <Filler />\r\n            </div>\r\n            )\r\n    }\r\n      \r\n    // ANIMATION CALL ON CLICKING TOO FAST LEAKING MEMORY?\r\n    const Filler = () => {\r\n        return <animated.div className={\"filler \" + skillCss} style={fillBarAnim} />\r\n    }\r\n\r\n    const isLoaded = (resource) => {\r\n        // if the props aren't loaded and they come back as undefined,\r\n        // render the component as \"Loading...\"\r\n        return (resource === undefined) ? <div>Loading...</div> : \r\n\r\n            <Row className=\"d-flex flex-nowrap justify-content-center rscrow\">\r\n\r\n            <button type=\"button\" className=\"btn btn-danger btn-sm rscbtn\" disabled={lockChanges} onClick={() => {\r\n                removeResource(resourceName)\r\n            }}>\r\n\r\n                -\r\n\r\n            </button>\r\n            \r\n            <ResourceBar />\r\n\r\n            <button type=\"button\" className=\"btn btn-success btn-sm rscbtn\" disabled={lockChanges} onClick={() => {\r\n                addResource(resourceName, cost, max)\r\n            }} >\r\n                \r\n                +\r\n                \r\n            </button>\r\n\r\n            <div className=\"resource-cost\">{cost}</div>\r\n\r\n            </Row>\r\n\r\n\r\n            };\r\n\r\n    return isLoaded(resource);\r\n}\r\n","import React from 'react'\r\nimport Resource from './Resource';\r\n// import Skilltree from '../skill_trees/SkillTree'\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function Resources(props) {\r\n    // props.resources.find(x => x.id === 160) = production\r\n    // props.resources.find(x => x.id === 161) = craft\r\n    // props.resources.find(x => x.id === 162) = magic power\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"resourcebox\">\r\n\r\n\r\n                {/* With resources, the cost is set locally and not in the database, unlike skills. */}\r\n\r\n                    <h3 className=\"resources\">Resources</h3>\r\n                    {/* Magic Power */}\r\n                    <Resource props={props} \r\n                                displayName={\"Magic Power\"} \r\n                                cost={props.MAGIC_POINT_COST} \r\n                                max={20}\r\n                                \r\n                                resourceName={\"magicPoints\"}\r\n\r\n                                resource={props.resources.magicPoints}\r\n                                skillCss={\"magic\"}\r\n                    />\r\n                    \r\n                    {/* Production */}\r\n                    <Resource props={props} \r\n                                displayName={\"Production\"} \r\n                                cost={props.PRODUCTION_POINT_COST} \r\n                                max={10} \r\n\r\n                                resourceName={\"productionPoints\"}\r\n\r\n                                resource={props.resources.productionPoints}skillCss={\"production\"}\r\n                    />\r\n\r\n                    {/* Craft */}\r\n                    <Resource props={props}\r\n                                displayName={\"Craft\"} \r\n                                cost={props.CRAFT_POINT_COST} \r\n                                max={10} \r\n\r\n                                resourceName={\"craftPoints\"}\r\n\r\n                                resource={props.resources.craftPoints}\r\n                                skillCss={\"craft\"}\r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Skill(props){\r\n\r\n    // local management. re-enable if skill checking is bugged,\r\n    // as well as lines 44 & 47\r\n    //const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const playerHasSkill = (playerSkills) => { \r\n        // if state.playerskills are undefined, return false\r\n        return (playerSkills === undefined) ?\r\n            false : compareIds(playerSkills)\r\n    }\r\n    \r\n    // search playerskills for a match\r\n    const compareIds = (playerSkills) => {\r\n\r\n        return playerSkills.some(skill => skill.id === props.skill.id);\r\n\r\n    }\r\n\r\n   const addSpaces = (string) => {\r\n           if (props.skill.tier === 2) {\r\n                return '  ';\r\n           } else if (props.skill.tier === 3) {\r\n                return '    ';\r\n           } else if (props.skill.tier === 4) {\r\n                return '      ';\r\n           } else if (props.skill.tier === 5) {\r\n                return '        ';\r\n           }\r\n   }\r\n\r\n   const checkedStyle = playerHasSkill(props.playerSkills) ? \" checked\" : \"\";\r\n\r\n    return (\r\n        <div className={\"skill row d-flex flex-nowrap\" + checkedStyle}>\r\n            <div className={\"skillBody col pl-1\" + checkedStyle}>\r\n                <p>\r\n                <input disabled={props.lockChanges} type=\"checkbox\" checked={playerHasSkill(props.playerSkills)} \r\n                \r\n                    onChange={e => {\r\n\r\n                        //(setIsChecked(\r\n                            props.playerCheckedASkillBox(props.skill, e.target.checked)\r\n                        ;\r\n                        //);\r\n                }}/> \r\n                    {' '} {addSpaces(props.skill.name)}\r\n                    {props.skill.name}\r\n                </p>\r\n                </div>\r\n            <div className=\"skillCost d-inline-flex flex-nowrap pr-1\">{props.skill.cost}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skill\r\n","import React, { Component, useState } from 'react'\r\nimport { Collapse, Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport Skill from './Skill';\r\n\r\nexport default function SkillTree(props){\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const skills = props.skills.map((skill) => (\r\n            <Skill key={skill.id} skill={skill} playerCheckedASkillBox={props.playerCheckedASkillBox} lockChanges={props.lockChanges} playerSkills={props.playerSkills} />\r\n        ))\r\n\r\n    return (\r\n        <div>\r\n                <h3><button className=\"btn-sm btn-dark float-left\" onClick={toggle}><FontAwesomeIcon icon={isOpen ? faChevronUp : faChevronDown} /></button>\r\n                {props.treeName}\r\n                <button className=\"btn-sm btn-dark float-right\" onClick={()=>{}}><FontAwesomeIcon icon={isOpen ? faChevronUp : faChevronDown} /></button></h3>\r\n            <Collapse isOpen={isOpen}>\r\n                {skills}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport LoginComponent from './LoginComponent';\r\nimport LogoutComponent from './LogoutComponent';\r\nimport AuthenticationService from '../services/AuthenticationService'\r\n\r\nexport default function UserLoginLogoutComponent() {\r\n\r\n    const [isUserLoggedIn, setUserLoggedIn] = useState(AuthenticationService.isUserLoggedIn());\r\n\r\n    const getUserLoggedInProp = (boolean) => {\r\n        setUserLoggedIn(boolean);\r\n    }\r\n\r\n    return (\r\n            <div className=\"App\">\r\n\r\n                <LogoutComponent isUserLoggedIn={isUserLoggedIn} getUserLoggedInProp={getUserLoggedInProp} />\r\n\r\n                <LoginComponent isUserLoggedIn={isUserLoggedIn} getUserLoggedInProp={getUserLoggedInProp} />\r\n\r\n            </div>\r\n    );\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function RegisterNewUserComponent() {\r\n    const API_URL = process.env.REACT_APP_API_DOMAIN\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [email, updateEmail] = useState('');\r\n    const [hasRegisterFailed, setRegisterFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        document.title = \"Register Account\"\r\n     }, []);\r\n\r\n    const eventUpdateEmail = (event) => updateEmail(event.target.value);\r\n\r\n    const requestRegisterNewUser = (email) => {\r\n        let url = API_URL + '/register'\r\n        return axios.post(url,\r\n            { \"email\": email })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setSuccessMessage(true)\r\n                setRegisterFailed(false)\r\n            }).catch((err) => {\r\n                setErrorMessage(err.response.data)\r\n                setRegisterFailed(true)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container form-group d-flex flex-column\">\r\n                <h1 className=\"text-center\">Register New User</h1>\r\n\r\n                    {hasRegisterFailed && <div className=\"alert alert-warning\">{\"Error: \" + errorMessage}</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">Registration Successful. A confirmation email has been sent to the provided email address. Please click the activation link in the email to continue</div>}\r\n\r\n                    {!showSuccessMessage &&\r\n                    <>\r\n                    Email: <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={eventUpdateEmail}/>\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" onClick={(event) => {event.persist(); requestRegisterNewUser(email);}}>Register</button>\r\n                    </>\r\n                    }\r\n                    <a href={APP_URL} className=\"text-center m-auto w-50 btn btn-secondary\">Back to homepage</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function NewPasswordComponent(props) {\r\n    const API_URL = process.env.REACT_APP_API_DOMAIN\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [password, updatePassword] = useState('');\r\n    const [password2, updatePassword2] = useState('');\r\n    const [hasRegisterFailed, setRegisterFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        document.title = \"Enter New Password\"\r\n     }, []);\r\n\r\n    const eventUpdatePassword = (event) => updatePassword(event.target.value);\r\n    const eventUpdatePassword2 = (event) => updatePassword2(event.target.value);\r\n\r\n    console.log(props)\r\n\r\n    const requestNewPassword = (password, password2) => {\r\n        let url = API_URL + '/confirm?token=';\r\n        return axios.post(url + props.match.params.token,\r\n            { \"p1\": password,\r\n                \"p2\": password2 })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setSuccessMessage(true)\r\n                setRegisterFailed(false)\r\n            }).catch((err) => {\r\n                setErrorMessage(err.response.data)\r\n                setRegisterFailed(true)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container form-group d-flex flex-column\">\r\n            <h1 className=\"text-center\">Enter New Password</h1>\r\n\r\n                    {hasRegisterFailed && <div className=\"alert alert-warning\">{\"Error: \" + errorMessage}</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">Password accepted. You may now log in normally. Thank you.</div>}\r\n\r\n                    {!showSuccessMessage &&\r\n                    <>\r\n                    Password: <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={eventUpdatePassword}/>\r\n\r\n                    Confirm Password: <input type=\"password\" className=\"form-control\" name=\"password2\" value={password2} onChange={eventUpdatePassword2}/>\r\n\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" onClick={(event) => {event.persist(); requestNewPassword(password, password2);}}>Submit</button>\r\n                    </>\r\n                    }\r\n                    <a href={APP_URL} className=\"text-center m-auto w-50 btn btn-secondary\">Back to homepage</a>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function ForgotPasswordComponent() {\r\n    const API_URL = process.env.REACT_APP_API_DOMAIN\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [email, updateEmail] = useState('');\r\n    const [hasRegisterFailed, setRegisterFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        document.title = \"Forgot Password\"\r\n     }, []);\r\n\r\n    const eventUpdateEmail = (event) => updateEmail(event.target.value);\r\n\r\n    const requestRegisterNewUser = (email) => {\r\n        let url = API_URL + '/forgot'\r\n        return axios.post(url,\r\n            { \"email\": email })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setSuccessMessage(true)\r\n                setRegisterFailed(false)\r\n            }).catch((err) => {\r\n                setErrorMessage(err.response.data)\r\n                setRegisterFailed(true)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container form-group d-flex flex-column\">\r\n            <h1 className=\"text-center\">Forgot Password?</h1>\r\n\r\n                    {hasRegisterFailed && <div className=\"alert alert-warning\">{\"Error: \" + errorMessage}</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">An email has been sent to the provided email address. Please click the forgot password link in the email to continue</div>}\r\n\r\n                    {!showSuccessMessage &&\r\n                    <>\r\n                    Email: <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={eventUpdateEmail}/>\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" onClick={(event) => {event.persist(); requestRegisterNewUser(email);}}>Submit</button>\r\n                    </>\r\n                    }\r\n                <a href={APP_URL} className=\"text-center m-auto w-50 btn btn-secondary\">Back to homepage</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// TODO: resources are not calculating cost from state values\r\n// TODO: continue comment sweep\r\n// TODO: continue refactor sweep\r\n// TODO: look into basic auth vs JWT for production\r\n\r\n//  OPTIONAL\r\n    // TODO: pull skill descriptions?\r\n    // TODO: Redesign?\r\n    // TODO: printable?\r\n    // TODO: admin mode?\r\n    // TODO: hide unused skills?\r\n\r\nimport React from 'react';\r\nimport { Container, Row, Col, } from 'reactstrap';\r\nimport Header from './site_layout/header/Header';\r\nimport CharacterInfo from './site_layout/character_info/CharacterInfo';\r\nimport Resources from './site_layout/resources/Resources';\r\nimport SkillTree from './site_layout/skill_trees/SkillTree';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport UserLoginLogoutComponent from './site_layout/user_management/components/UserLoginLogoutComponent';\r\nimport RegisterNewUserComponent from './site_layout/user_management/components/RegisterNewUserComponent';\r\nimport NewPasswordComponent from './site_layout/user_management/components/NewPasswordComponent';\r\nimport ForgotPasswordComponent from './site_layout/user_management/components/ForgotPasswordComponent';\r\nimport AuthenticationService from './site_layout/user_management/services/AuthenticationService';\r\n\r\nimport { withAlert } from 'react-alert';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        // TOP LEVEL REACT STATE:::\r\n        \r\n        // All of our character information is stored in state. It is overwritten with a localstorage character (if any),\r\n        // or a Database character when selected by the logged in user\r\n        \r\n        // All of a logged in user's characters are stored in characterList\r\n        \r\n        // All of our skills are loaded into skilltree arrays, and player skills are loaded into the playerHasSkill array\r\n        \r\n        // The switch for enabling/disabling skills is also stored here\r\n\r\n        // character info\r\n        id: \"\",\r\n        characterName: \"\",\r\n        country: \"\",\r\n        player: \"\",\r\n        race: \"\",\r\n        level: 0,\r\n        savedXp: 0,\r\n        playerHasSkill: [],\r\n\r\n        // list of characters owned by logged in user\r\n        characterList: [],\r\n\r\n        \r\n        // RESOURCES\r\n        resources: {\r\n            magicPoints: 0,\r\n            craftPoints: 0,\r\n            productionPoints: 0,\r\n        },\r\n\r\n        // With resources, the cost is set in state, and not in the database. ...For now.\r\n            MAGIC_POINT_COST: 1,\r\n            CRAFT_POINT_COST: 2,\r\n            PRODUCTION_POINT_COST: 2,\r\n        \r\n        // LOCK BUTTONS TO PREVENT EDITING\r\n        locked: false,\r\n\r\n        // SKILL TREES\r\n        combat: [],\r\n        general: [],\r\n        production: [],\r\n        roleplaying: [],\r\n        aegis: [],\r\n        battle: [],\r\n        nature: [],\r\n        necromancy: [],\r\n        compulsion: [],\r\n        restoration: [],\r\n        enchantment: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Kingdoms of Novitas | Character Sheet\"\r\n        // componentDidMount is called when react successfully inserts a component into the DOM. \r\n        // We then check if the user is logged in to load their characters\r\n        // Then we load all of our skills from the database\r\n        // Then we load whatever the user had in localStorage, if anything\r\n\r\n        if (AuthenticationService.isUserLoggedIn()) {\r\n            AuthenticationService.setupAxiosInterceptors(sessionStorage.getItem(\"USER_TOKEN\"));\r\n            this.loadCharacterList();\r\n        };\r\n\r\n        let skills = [];\r\n        axios.get(process.env.REACT_APP_API_DOMAIN + '/skills')\r\n            .then(res => {\r\n                // an array of skill objects was obtained from the database\r\n                skills = [...res.data];\r\n                // sort them\r\n                this.sortSkillsByTree(skills);\r\n\r\n                });\r\n\r\n        if (localStorage.getItem(\"character\") !== null){\r\n            this.loadLocalCharacter()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // Called when state or props update, so we use it to update the localStorage character\r\n        this.saveLocalCharacter()\r\n    }\r\n\r\n    sortSkillsByTree = (skills) => {\r\n        // Called in componentDidUpdate. Called when we get skills from database\r\n\r\n        // keys in state currently empty arrays\r\n        for (let key in this.state) {\r\n            for (let skill in skills) {\r\n                // if state key is the same as skill tree\r\n                if (key === skills[skill].tree) {\r\n                    // state is immutable, and batches updates. We spread the previous state (prevState) and then add the skill so that the correct previous value + new value is added\r\n                    this.setState(prevState => ({\r\n                        [key]: [...prevState[key], skills[skill]]\r\n                    }));\r\n                }\r\n            }\r\n        } \r\n    };\r\n\r\n    saveLocalCharacter = () => {\r\n        // called by componentDidUpdate\r\n\r\n        let values = this.state\r\n\r\n        let character = {\r\n            characterName: values.characterName,\r\n            player: values.player,\r\n            race: values.race,\r\n            country: values.country,\r\n            level: values.level,\r\n            savedXp: values.savedXp,\r\n            magicPoints: values.resources.magicPoints,\r\n            craftPoints: values.resources.craftPoints,\r\n            productionPoints: values.resources.productionPoints,\r\n            skills: values.playerHasSkill\r\n        }\r\n\r\n        localStorage.setItem(\"character\", JSON.stringify(character))\r\n    }\r\n\r\n    loadLocalCharacter = () => {\r\n        // CALLED BY: componentDidMount\r\n        // load character from localStorage, if any\r\n\r\n        var localStorageCharacter = JSON.parse(localStorage.getItem(\"character\"));\r\n        \r\n        this.setState(prevState =>({\r\n            ...prevState,\r\n            \r\n            characterName: localStorageCharacter.characterName,\r\n            player: localStorageCharacter.player,\r\n            race: localStorageCharacter.race,\r\n            country: localStorageCharacter.country,\r\n            level: localStorageCharacter.level,\r\n            savedXp: localStorageCharacter.savedXp,\r\n            magicPoints: localStorageCharacter.magicPoints,\r\n            craftPoints: localStorageCharacter.craftPoints,\r\n            productionPoints: localStorageCharacter.productionPoints,\r\n            playerHasSkill: localStorageCharacter.skills\r\n        }))\r\n    }\r\n    \r\n    loadCharacterList = () => {\r\n        // CALLED BY: componentDidMount, saveCharacter, loadCharacter,\r\n                    // loginClicked (Header -> Navigation -> LoginComponent)\r\n        // load all characters owned by current user\r\n        \r\n        let url = process.env.REACT_APP_API_DOMAIN + '/characters'\r\n        return axios({\r\n            method: 'get',\r\n            url: url})\r\n            .then((res) => {\r\n                this.setState(() =>({\r\n                    characterList: [...res.data]\r\n                }))\r\n                \r\n            })\r\n            .catch((err) => {\r\n                // console.log(err.response.data)\r\n                alert.show(err.response.data, {timeout: 5000, type: 'error'})\r\n            })\r\n        }\r\n    \r\n        \r\n        saveCharacter = (id, alert) => {\r\n            // CALLED BY: Navigation(onClick(new Character)) (Header -> Navigation) \r\n            // CALLED BY: ConfirmationModal(onClick) (Header -> Navigation -> ConfirmationModal)\r\n            // Save character to database. If an ID is provided, it will overwrite the database character with the matching ID\r\n            // Ownership of the character is checked on the backend, so the user cannot overwrite a character that does not\r\n            // belong to them\r\n        \r\n            // alert is passed in, because App.js this.props.alert is not accessible.\r\n\r\n        let values = this.state\r\n\r\n        let character = {\r\n            id: id,\r\n            characterName: values.characterName,\r\n            player: values.player,\r\n            race: values.race,\r\n            country: values.country,\r\n            level: values.level,\r\n            savedXp: values.savedXp,\r\n            magicPoints: values.resources.magicPoints,\r\n            craftPoints: values.resources.craftPoints,\r\n            productionPoints: values.resources.productionPoints,\r\n            skills: values.playerHasSkill\r\n        }\r\n\r\n        let url = process.env.REACT_APP_API_DOMAIN + '/character'\r\n        return axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: character })\r\n            .then((res) => {\r\n                \r\n                // reload the character list on success\r\n                this.loadCharacterList();\r\n\r\n                // alert arg use\r\n                alert.show(\"Character Saved\", {timeout: 5000, type: 'success'})\r\n            }).catch((err) => {\r\n\r\n                // console.log(err.response.data)\r\n                alert.show(err.response.data, {timeout: 5000, type: 'error'})\r\n            })\r\n        \r\n    }\r\n    \r\n    loadCharacter = (id, alert) => {\r\n        // load a user selected character from the database\r\n        \r\n        let url = process.env.REACT_APP_API_DOMAIN + '/character'\r\n        return axios({\r\n            method: 'get',\r\n            url: url,\r\n            params: {\"id\":id}})\r\n            .then((res) => {\r\n                // react doesnt like nested state, so we need to make a nest for our resources first\r\n                // due to the way we stored them in this.state\r\n                var resources = {magicPoints: res.data.magicPoints,\r\n                                    productionPoints: res.data.productionPoints,\r\n                                craftPoints: res.data.craftPoints}\r\n\r\n                this.setState(prevState =>({\r\n                    ...prevState,\r\n\r\n                    id : res.data.id,\r\n                    characterName: res.data.characterName,\r\n                    race: res.data.race,\r\n                    player: res.data.player,\r\n                    country: res.data.country,\r\n                    level: res.data.level,\r\n                    savedXp: res.data.savedXp,\r\n\r\n                    // resource nest made above\r\n                    resources: resources,\r\n\r\n                    // list of user skills\r\n                    playerHasSkill: res.data.skills\r\n                }))\r\n                alert.show(\"Character Loaded\", {timeout: 5000, type: 'success'})\r\n            })\r\n            .catch((err) => {\r\n                // console.log(err.response.data)\r\n                alert.show(err.response.data, {timeout: 5000, type: 'error'})\r\n            })\r\n\r\n    }\r\n\r\n    deleteCharacter = (id, alert) => {\r\n        let url = process.env.REACT_APP_API_DOMAIN + '/character'\r\n        return axios({\r\n            method: 'delete',\r\n            url: url,\r\n            params: {\"id\":id}})\r\n            .then((res) => {\r\n                // console.log(res.data)\r\n                this.loadCharacterList()\r\n                alert.show(\"Character Deleted\", {timeout: 5000, type: 'success'})\r\n            })\r\n            .catch((err) => {\r\n                // console.log(err.response.data)\r\n                alert.show(err.response.data, {timeout: 5000, type: 'error'})\r\n            })\r\n\r\n    }\r\n\r\n    characterInfoChange = (infoName, updatedInfo) => {\r\n        // CALLED BY:\r\n        // CharacterInfo -> CharacterInfoInput(onChange)\r\n        // if the infoName is \"level\", we need to update players skill points remaining.\r\n        this.setState({[infoName]: updatedInfo}, function() {\r\n            this.calculateSkillPointsRemaining();\r\n        });  \r\n    }\r\n    \r\n    calculateBaseSkillPoints = () => { \r\n        // CALLED BY: calculateSkillPointsRemaining\r\n        // a level 1 character has 4 skill points. Every level after that is +2\r\n\r\n        return this.state.level === 1 ? 4 : (this.state.level * 2) + 4\r\n    }\r\n\r\n\r\n    calculateSkillPointsRemaining = () => {\r\n        // used anytime our skill points need to be updated or checked\r\n\r\n        var newSkillPointsRemaining = this.calculateBaseSkillPoints();\r\n\r\n        newSkillPointsRemaining -= this.calculateSpentSkillPoints();\r\n\r\n        return newSkillPointsRemaining;\r\n    }\r\n\r\n    calculateSpentSkillPoints = () => {\r\n        // CALLED BY: calculateSkillPointsRemaining\r\n        // this function is used to determine the total accumulated cost of the characters skills + resources\r\n        var spent = 0;\r\n        var playerSkills = this.state.playerHasSkill;\r\n        var playerResources = this.state.resources;\r\n\r\n        for (let skill in playerSkills) {\r\n            spent += playerSkills[skill].cost;\r\n        }\r\n\r\n        spent += (playerResources.craftPoints * 2) + (playerResources.productionPoints * 2) + playerResources.magicPoints;\r\n\r\n        return spent;\r\n    }\r\n\r\n    checkRequirements = (skill) => {\r\n        // return true if player meets requirements for skill\r\n    \r\n        // skill.requires is a string that is equal to anotherSkill.name required for skill\r\n        let requiredSkill = skill.requires\r\n\r\n        // skill does not have a required skill\r\n        if (requiredSkill === \"\" || requiredSkill === null) {\r\n            return true; \r\n        }\r\n\r\n        // player's skills array\r\n        let pSkills = this.state.playerHasSkill;\r\n\r\n        for (let pSkill in pSkills) {\r\n            // if one of the player's skill contains the required skill name\r\n            if (requiredSkill.includes(pSkills[pSkill].name)) {\r\n                // we're good\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n    playerCheckedASkillBox = (checkedSkill, e) => {\r\n        // CALLED BY Skill.js(checkBox onChange) (SkillTree.js -> Skill.js)\r\n\r\n        // add or remove a skill on checkbox change\r\n            // make sure enough skill points are available\r\n            // make sure requirements are met?\r\n            // add skill to playerHasSkill Array, or remove it\r\n\r\n        if (!this.checkRequirements(checkedSkill)) {\r\n            // console.log(\"You do not meet the requirements for \" + checkedSkill.name)\r\n            this.props.alert.show(\"You do not meet the requirements for \" + checkedSkill.name, {timeout: 5000, type: 'error'})\r\n            return false;\r\n        };\r\n \r\n        // if click detected\r\n        if (e) {\r\n\r\n            // check the cost        \r\n            if (this.calculateSkillPointsRemaining() - checkedSkill.cost < 0) {\r\n                // console.log(\"You do not have enough skill points for \" + checkedSkill.name);\r\n                this.props.alert.show(\"You do not have enough skill points for \" + checkedSkill.name, {timeout: 5000, type: 'error'})\r\n                return false;\r\n            };\r\n\r\n            // add skill\r\n            return this.addSkill(checkedSkill);\r\n            \r\n        } else {\r\n\r\n            // if the skill is required, don't remove it\r\n            if (this.skillIsRequired(checkedSkill)) {\r\n                return true;\r\n            }\r\n\r\n            // remove\r\n            return this.removeSkill(checkedSkill);\r\n        }\r\n    }\r\n\r\n    skillIsRequired = (skill) => {\r\n        // don't allow player to remove a skillpoint if it's a necessary requirement for another skill the player has\r\n\r\n        // THIS FUNCTION IS ATROCIOUS\r\n\r\n        let pSkills = this.state.playerHasSkill;\r\n\r\n        for (let pSkill in pSkills) {\r\n\r\n            // current iterations required skills\r\n            let requirementSkillString = pSkills[pSkill].requires\r\n\r\n            // if the current playerskill has a prerequisite skill\r\n            if (requirementSkillString !== \"\" && requirementSkillString !== null) {\r\n\r\n                // if it includes the skill we are trying to remove, it's a requirement\r\n                if (requirementSkillString.includes(skill.name)) {\r\n\r\n                    // if it includes a pipe, there's another prerequisite\r\n                    if(requirementSkillString.includes(\"|\")) {\r\n\r\n                        // iterate again\r\n                        for (let pSkill2 in pSkills) {\r\n\r\n                            // if the current playerskill has a prerequisite skill\r\n                            if (requirementSkillString !== \"\" && requirementSkillString !== null) {\r\n\r\n                                // if the NEW FOUND SKILL is required by the FIRST FOUND SKILL\r\n                                // but it does not equal the SKILL BEING REMOVED\r\n                                // the player still meets the requirements\r\n                                // (this took me way too long and it seems overcomplicated)\r\n                                if (skill.name !== pSkills[pSkill2].name && requirementSkillString.includes(pSkills[pSkill2].name)) {\r\n                                    //console.log(skill.name + \" is a prerequisite for \" + pSkills[pSkill].name + \", but player has \" + pSkills[pSkill2].name + \", which is also a prerequisite\")\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                        // console.log(\"Cannot remove \" + skill.name + \". It is a prerequisite for \" + pSkills[pSkill].name)\r\n                        this.props.alert.show(\"Cannot remove \" + skill.name + \". It is a prerequisite for \" + pSkills[pSkill].name, {timeout: 5000, type: 'error'})\r\n                        return true;    \r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    addResource = (resourceName, cost, max) => {\r\n        // CALLED BY: Resources.js -> Resource.js(onClick)\r\n\r\n        if (this.calculateSkillPointsRemaining() - cost < 0) {\r\n            this.props.alert.show(\"You do not have enough skill points\", {type:'error'});\r\n            return false;\r\n        };\r\n\r\n        // check if player maxed out resource amount already\r\n        if (this.state.resources[resourceName] >= max) {\r\n                // console.log(resourceName + \" limit reached\")\r\n                return false;\r\n        };\r\n\r\n        // local resources variable\r\n        let resources = this.state.resources\r\n        // add a point to this resource\r\n        resources[resourceName] += 1;\r\n\r\n        // add new resources to state and calc SPR\r\n        this.setState({resources}, () => {this.calculateSkillPointsRemaining()});\r\n\r\n        return true;\r\n    }\r\n\r\n    removeResource = (resourceName) => {\r\n         // CALLED BY: Resources.js -> Resource.js(onClick)\r\n\r\n        if (this.state.resources[resourceName] === 0) {\r\n            // console.log(\"you can't go below 0, you idiot\")\r\n            return false;\r\n        }\r\n\r\n        let resources = this.state.resources\r\n        resources[resourceName] -= 1;\r\n\r\n        this.setState({resources});\r\n    }\r\n\r\n    addSkill = (skill) => {\r\n        // called by playerCheckedASkillBox\r\n\r\n        this.setState(prevState => ({\r\n            playerHasSkill: ([...prevState.playerHasSkill, skill]) }), function ()   {\r\n                this.calculateSkillPointsRemaining()\r\n        });\r\n        // console.log(\"You have added the \" + skill.name + \" skill\")\r\n        return true;\r\n        }\r\n   \r\n    removeSkill = (skill) => {\r\n        // called by playerCheckedASkillBox\r\n\r\n        this.setState(prevState => ({\r\n            // filter previous state.playerhasskill array to return a new array without matching skill\r\n            playerHasSkill: prevState.playerHasSkill.filter(arrSkill => arrSkill.name !== skill.name)\r\n        }), function () {\r\n            this.calculateSkillPointsRemaining()\r\n        })\r\n\r\n        // console.log(\"You have removed the \" + skill.name + \" skill\")\r\n        return false;\r\n    }\r\n\r\n\r\n    lockChanges = () => {\r\n        // disable inputs on playerInfo, resources, and skill checkboxes\r\n        \r\n        this.props.alert.show(\"Character editing \" + (this.state.locked ? \"unl\" : \"l\") + \"ocked\")\r\n\r\n        this.setState(prevState => ({locked: !prevState.locked}));\r\n\r\n        this.calculateSkillPointsRemaining();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n\r\n                            <Header \r\n                                lockChanges={this.lockChanges}\r\n                                locked={this.state.locked} \r\n                                saveCharacter={this.saveCharacter} \r\n                                loadCharacter={this.loadCharacter} \r\n                                deleteCharacter={this.deleteCharacter} \r\n                                characterList={this.state.characterList} \r\n                                loadCharacterList={this.loadCharacterList}\r\n                                // pass state to a button for testing\r\n                                staate={this.state} >\r\n                            </Header>\r\n\r\n                            <CharacterInfo\r\n                                level={this.state.level}\r\n                                characterName={this.state.characterName}\r\n                                country={this.state.country}\r\n                                player={this.state.player}\r\n                                race={this.state.race}\r\n                                savedXp={this.state.savedXp}\r\n                                characterInfoChange={this.characterInfoChange}\r\n                                lockChanges={this.state.locked}\r\n                                calculateSkillPointsRemaining={this.calculateSkillPointsRemaining}\r\n                            />\r\n\r\n                            <Container>\r\n                                <Resources \r\n                                    resources={this.state.resources}\r\n                                    addResource={this.addResource} \r\n                                    removeResource={this.removeResource} \r\n                                    lockChanges={this.state.locked} \r\n                                    MAGIC_POINT_COST={this.state.MAGIC_POINT_COST}\r\n                                    PRODUCTION_POINT_COST={this.state.PRODUCTION_POINT_COST}\r\n                                    CRAFT_POINT_COST={this.state.CRAFT_POINT_COST}\r\n                                />\r\n                                \r\n                                <Row>\r\n                                    <Col className=\"skilltree\">\r\n\r\n                                        <div className=\"combat\">\r\n                                            <SkillTree \r\n                                                treeName=\"Combat\"\r\n                                                skills={this.state.combat} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} \r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"general\">\r\n                                            <SkillTree \r\n                                                treeName=\"General\"\r\n                                                skills={this.state.general} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                ockChanges={this.state.locked} />\r\n                                        </div>\r\n                                        <div className=\"nature\">\r\n                                            <SkillTree \r\n                                                treeName=\"Nature\"\r\n                                                skills={this.state.nature} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                        <div className=\"necromancy\">\r\n                                            <SkillTree \r\n                                                treeName=\"Necromancy\"\r\n                                                skills={this.state.necromancy} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col className=\"skilltree\">\r\n\r\n                                        <div className=\"production\">\r\n                                                <SkillTree \r\n                                                treeName=\"Production\"\r\n                                                skills={this.state.production} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"aegis\">\r\n                                                <SkillTree \r\n                                                treeName=\"Aegis\"\r\n                                                skills={this.state.aegis} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"battle\">\r\n                                            <SkillTree \r\n                                                treeName=\"Battle\"\r\n                                                skills={this.state.battle} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col className=\"skilltree\">\r\n\r\n                                        <div className=\"roleplaying\">\r\n                                            <SkillTree \r\n                                                treeName=\"Roleplaying\"\r\n                                                skills={this.state.roleplaying} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"compulsion\">\r\n                                            <SkillTree \r\n                                                treeName=\"Compulsion\"\r\n                                                skills={this.state.compulsion} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                    \r\n                                        <div className=\"restoration\">\r\n                                            <SkillTree \r\n                                                treeName=\"Restoration\"\r\n                                                skills={this.state.restoration} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"enchantment\">\r\n                                            <SkillTree \r\n                                                treeName=\"Enchantment\"\r\n                                                skills={this.state.enchantment} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </Route>\r\n                        <Route exact path=\"/login\">\r\n                            <UserLoginLogoutComponent />\r\n                                <div className=\"registerbox d-flex flex-column align-items-center m-5\">\r\n                                    <div>No account?</div>\r\n                                    <Link to=\"/register\">\r\n                                        <button className=\"btn btn-success\">Register</button>\r\n                                    </Link>\r\n                                    <div>Forgot your password?</div>\r\n                                    <Link to=\"/forgot\">\r\n                                        <button className=\"btn btn-success\">Reset Password</button>\r\n                                    </Link>\r\n                                </div>\r\n                        </Route>\r\n\r\n                        <Route path=\"/register\" exact component={RegisterNewUserComponent} />\r\n\r\n                        <Route path=\"/forgot\" exact component={ForgotPasswordComponent} />\r\n\r\n                        <Route path=\"/newpass:token\" exact component={NewPasswordComponent} /> \r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withAlert()(App);\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\r\nimport AlertTemplate from './react-alert-template-basic'\r\n\r\n// optional cofiguration\r\nconst options = {\r\n    // you can also just use 'bottom center'\r\n    position: positions.TOP_CENTER,\r\n    timeout: 3000,\r\n    offset: '30px',\r\n    // you can also just use 'scale'\r\n    transition: transitions.FADE\r\n  }\r\n  \r\nconst Root = () => (\r\n    <AlertProvider template={AlertTemplate} {...options}>\r\n        <App />\r\n    </AlertProvider>\r\n)\r\n\r\nrender(<Root />, document.getElementById('root'));\r\n\r\n","function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\r\n\r\nvar React = _interopDefault(require('react'));\r\n\r\nvar BaseIcon = function BaseIcon(_ref) {\r\n  var color = _ref.color,\r\n      _ref$pushRight = _ref.pushRight,\r\n      pushRight = _ref$pushRight === undefined ? true : _ref$pushRight,\r\n      children = _ref.children;\r\n  return React.createElement(\r\n    'svg',\r\n    {\r\n      xmlns: 'http://www.w3.org/2000/svg',\r\n      width: '24',\r\n      height: '24',\r\n      viewBox: '0 0 24 24',\r\n      fill: 'none',\r\n      stroke: color,\r\n      strokeWidth: '2',\r\n      strokeLinecap: 'round',\r\n      strokeLinejoin: 'round',\r\n      style: { marginRight: pushRight ? '20px' : '0', minWidth: 24 }\r\n    },\r\n    children\r\n  );\r\n};\r\n\r\nvar InfoIcon = function InfoIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#2E9AFE' },\r\n    React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n    React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '12' }),\r\n    React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '8' })\r\n  );\r\n};\r\n\r\nvar SuccessIcon = function SuccessIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#31B404' },\r\n    React.createElement('path', { d: 'M22 11.08V12a10 10 0 1 1-5.93-9.14' }),\r\n    React.createElement('polyline', { points: '22 4 12 14.01 9 11.01' })\r\n  );\r\n};\r\n\r\nvar ErrorIcon = function ErrorIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#FF0040' },\r\n    React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n    React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '12' }),\r\n    React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '16' })\r\n  );\r\n};\r\n\r\nvar CloseIcon = function CloseIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#FFFFFF', pushRight: false },\r\n    React.createElement('line', { x1: '18', y1: '6', x2: '6', y2: '18' }),\r\n    React.createElement('line', { x1: '6', y1: '6', x2: '18', y2: '18' })\r\n  );\r\n};\r\n\r\nvar _extends = Object.assign || function (target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n\r\n    for (var key in source) {\r\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\nvar alertStyle = {\r\n  backgroundColor: '#333',\r\n  color: 'white',\r\n  padding: '10px',\r\n  borderRadius: '3px',\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  boxShadow: '0px 2px 2px 2px rgba(0, 0, 0, 0.03)',\r\n  fontFamily: 'Arial',\r\n  width: '250px',\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nvar buttonStyle = {\r\n  marginLeft: '20px',\r\n  border: 'none',\r\n  backgroundColor: 'transparent',\r\n  cursor: 'pointer',\r\n  color: '#FFFFFF'\r\n};\r\n\r\nvar AlertTemplate = function AlertTemplate(_ref) {\r\n  var message = _ref.message,\r\n      options = _ref.options,\r\n      style = _ref.style,\r\n      close = _ref.close;\r\n\r\n  return React.createElement(\r\n    'div',\r\n    { onClick: close, style: _extends({}, alertStyle, style) },\r\n    options.type === 'info' && React.createElement(InfoIcon, null),\r\n    options.type === 'success' && React.createElement(SuccessIcon, null),\r\n    options.type === 'error' && React.createElement(ErrorIcon, null),\r\n    React.createElement(\r\n      'span',\r\n      { style: { flex: 2, whiteSpace: 'initial', textAlign: 'center' } },\r\n      message\r\n    ),\r\n    React.createElement(\r\n      'button',\r\n      { style: buttonStyle },\r\n      React.createElement(CloseIcon, null)\r\n    )\r\n  );\r\n};\r\n\r\nmodule.exports = AlertTemplate;\r\n"],"sourceRoot":""}